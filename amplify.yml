version: 1
backend:
  phases:
    build:
      commands:
        - echo "Starting backend build"
        - |
          if [ -d "amplify" ] && [ -f "amplify/.config/project-config.json" ]; then
            echo "Amplify backend project detected"
            amplify status
            if [ $? -eq 0 ]; then
              echo "Amplify project is valid, checking for changes"
              if [ "$AWS_COMMIT_ID" == "" ] || [ -n "$(find amplify -name "*.ts" -o -name "*.js" -o -name "*.json" -mtime -1 2>/dev/null)" ]; then
                echo "Backend changes detected, building backend"
                amplify push --yes
              else
                echo "No backend changes detected, skipping backend build"
              fi
            else
              echo "Amplify project exists but is not initialized properly, skipping backend build"
            fi
          else
            echo "No Amplify backend project detected, skipping backend build"
          fi
frontend:
  phases:
    preBuild:
      commands:
        - echo "Node version $(node -v)"
        - '# Install dependencies only if package files changed or node_modules is missing'
        - 'if [ ! -d "node_modules" ] || [ -n "$(find . -name "package*.json" -mtime -1 2>/dev/null)" ]; then'
        - '  echo "Installing dependencies"'
        - '  npm ci'
        - 'else'
        - '  echo "Using cached node_modules"'
        - 'fi'
    build:
      commands:
        - echo "Running frontend build"
        - npm run build
  artifacts:
    baseDirectory: build # or dist, .next, etc. depending on your framework
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .npm/**/*
      - .cache/**/* 
      - .next/cache/**/* # For Next.js projects
      - build/**/* # Cache build artifacts when possible
test:
  phases:
    preTest:
      commands:
        - echo "Skipping tests"
    test:
      commands:
        - echo "No tests configured"
  artifacts:
    baseDirectory: .
    configFilePath: ./dummy-test-report.xml
    files:
      - dummy-test-report.xml
    postBuild:
      commands:
        - echo '<testsuites><testsuite tests="0" failures="0" time="0"></testsuite></testsuites>' > dummy-test-report.xml